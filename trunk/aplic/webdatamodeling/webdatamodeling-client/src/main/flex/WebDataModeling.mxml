<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute"
	xmlns:display="flash.display.*"
	xmlns:components="com.pfp.components.*"
	creationComplete="init()" applicationComplete="verificarUsuarioAutenticado()" xmlns:components1="br.edu.ucb.webdatamodeling.components.*">
	
	<mx:Style source="../resources/assets/style/style.css"/>
	
	<mx:Metadata>
        [ResourceBundle("messages")]
    </mx:Metadata>
	    
	<mx:Script>
		<![CDATA[
			import br.edu.ucb.webdatamodeling.components.Script;
			import br.edu.ucb.webdatamodeling.components.ManterArquivo;
			import br.edu.ucb.webdatamodeling.controller.NovoArquivoController;
			import br.edu.ucb.webdatamodeling.components.DadosArquivo;
			import br.edu.ucb.webdatamodeling.dto.ArquivoDTO;
			import br.edu.ucb.webdatamodeling.components.ArvoreVazia;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.AsyncToken;
			import br.edu.ucb.webdatamodeling.tree.FolderNode;
			import br.edu.ucb.webdatamodeling.service.UsuarioService;
			import br.edu.ucb.webdatamodeling.service.PastaService;
			import br.edu.ucb.webdatamodeling.tree.FileNode;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.FaultEvent;
			import br.edu.ucb.webdatamodeling.events.CustomEvent;
			import mx.events.TreeEvent;
			import br.edu.ucb.webdatamodeling.dto.PastaDTO;
			import br.edu.ucb.webdatamodeling.tree.FileSystemTreeDataDescriptor;
			import br.edu.ucb.webdatamodeling.controller.TreeViewController;
			import mx.managers.CursorManager;
			import mx.controls.Alert;
			import br.edu.ucb.webdatamodeling.controller.WebDataModelingController;
			
			private var _controller:WebDataModelingController;
			private var _controllerTreeView:TreeViewController;
			
			public function init():void
			{
				_controller = new WebDataModelingController(this);
				_controller.init();
				
				
				 init2();
			}

			private function initTreeView():void
           	{
                _controllerTreeView = new TreeViewController(this.treeView);
				_controllerTreeView.init();
           	}
			
			public function verificarUsuarioAutenticado():void
			{
				if (_controller == null) {
					_controller = new WebDataModelingController(this);
				}
				
				novoArquivo.tree = treeView;
			}
			
			
			
			
			
			
			// aqui
			[Bindable]
		private var files:ArrayCollection;
	
		private var _pastaService:PastaService = PastaService.getInstance();
		
		private var _usuarioService:UsuarioService = UsuarioService.getInstance();
		
		public function init2():void
		{
			/* var node1:FileNode = new FileNode();
			node1.size = 5;
			node1.Name = "nó 1";
			node1.fullName = "";
			node1.createdOn = new Date();
			node1.lastAccessedOn = new Date();
			node1.lastWrittenOn = new Date();

			var folder2:FolderNode = new FolderNode();
			folder2.Name = "Pasta 2";
			
			var folder1:FolderNode = new FolderNode();
			folder1.Name = "Pasta 1";
			folder1.items.addItem(node1);
			folder1.items.addItem(folder2);
			
			files = new ArrayCollection();
			files.addItem(folder1); */
			_usuarioService.addEventListener("login", initHandler);
			_controller.addEventListener(NovoArquivoController.UPDATE_TREE, initHandler);
			treeView.addEventListener(NovoArquivoController.UPDATE_TREE, initHandler);
		}
		
		public function initHandler(event:Event):void
		{
			_pastaService.addEventListener("getPastas", processRootStructure);
			_pastaService.getPastasByUsuarioAutenticado();
		}
		
		private function processRootStructure(result:CustomEvent):void
		{
			var pastas:ArrayCollection = result.data;
			
			if (pastas == null || pastas.length == 0) {
				msgEstruturaVazia.visible = true;
			} else {
				msgEstruturaVazia.visible = false;
				files = result.data;
			}
		}
		
		private function gotError(fault:FaultEvent):void
		{
			Alert.show("Server reported an error - " + fault.fault.faultString);
		}
		
		public function handleTreeChange(event:Event):void
		{
			var selectedItem:Object = Tree(event.target).selectedItem;
			
			if (selectedItem is PastaDTO)
			{
				fetchFolderInfo(PastaDTO(selectedItem));
			}
			else if (selectedItem is ArquivoDTO)
			{
				fetchFileInfo(ArquivoDTO(selectedItem));
			}
		}
		
		public function handleRetrieve(event:TreeEvent):void
		{
			if (event.item is FolderNode && event.opening) {
				fetchFolderInfo(PastaDTO(event.item));
			}
		}
		
		private function fetchFolderInfo(folder:PastaDTO):void
		{
			if (folder.arquivos.length != 0) {
				return;
			}
			// escrever service	
			/* var asyncToken:AsyncToken = null;//fileSystemService.getDirectory( folder.fullName );
			
			asyncToken.addResponder( new mx.rpc.Responder(
                function( event:ResultEvent ):void
                {
                	folder.arquivos = new ArrayCollection(event.result as Array);
                	treeView.validateNow();
                	treeView.expandItem( folder, true );	                	
                },
                function( fault:FaultEvent):void
                {
                	gotError( fault );
                }
            ));*/
		}
		
		private function fetchFileInfo(file:ArquivoDTO):void
		{
			var manterArquivoView:ManterArquivo = new ManterArquivo();
			manterArquivoView.arquivo = file;
			
			fileView.addChild(manterArquivoView);
		}
		]]>
	</mx:Script>
	<mx:VBox width="100%" height="100%">
		<mx:ApplicationControlBar width="100%" height="40">
			<mx:HBox horizontalAlign="center" verticalAlign="middle" width="100%">
				<mx:VBox>
					<mx:Text text="WEB DATA MODELING" fontFamily="Verdana" fontSize="15" fontWeight="bold"/>
				</mx:VBox>
				<mx:VBox horizontalAlign="right" width="100%">
					<mx:Text text="versão 1.0 beta" enabled="true" textAlign="left"/>
				</mx:VBox>
			</mx:HBox>
		</mx:ApplicationControlBar>
		<mx:Canvas id="content" width="100%" height="100%" verticalScrollPolicy="auto" horizontalScrollPolicy="auto">
			<mx:HDividedBox id="subContent" width="100%" height="100%">
				<mx:VBox width="25%" height="100%">
					<mx:Label id="msgEstruturaVazia" height="5%" text="Você ainda não criou nenhum pasta ou arquivo" textAlign="center" color="#FF0000" fontWeight="bold" fontSize="10" visible="false" width="100%"/>
					<mx:Label text="Estrutura de arquivos" height="5%" textAlign="center" width="100%" fontWeight="bold" fontSize="10"/>
					<mx:Tree id="treeView" width="100%" height="80%" backgroundAlpha="0.49"
	                                       dataDescriptor="{new FileSystemTreeDataDescriptor()}"
	                                       dataProvider="{files}"
	                                       change="handleTreeChange(event)"
	                                       itemOpening="handleRetrieve(event)"
	                                       labelField="nome">
	               </mx:Tree>
	               <components1:NovoArquivo id="novoArquivo" width="100%" height="10%" tree="{treeView}"/>
               </mx:VBox>
				<mx:Canvas id="fileView" width="75%" height="100%" backgroundColor="white" backgroundAlpha="0.49"/>
			</mx:HDividedBox>
		</mx:Canvas>
		<mx:ApplicationControlBar width="100%" height="40">
			<mx:Label text="Usuário:" />
			<mx:Text id="txtNomeUsuario" selectable="false" />
			<mx:VBox horizontalAlign="right" width="100%">
				<mx:Image click="_controller.logout()" buttonMode="true" useHandCursor="true" source="@Embed(source='../resources/assets/images/exit.png')" autoLoad="true" scaleContent="true" width="30" height="30"/>
			</mx:VBox>	
		</mx:ApplicationControlBar>
	</mx:VBox>
</mx:Application>
